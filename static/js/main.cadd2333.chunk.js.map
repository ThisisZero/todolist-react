{"version":3,"sources":["components/Header.js","components/Warning.js","components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Helmet","React","PureComponent","WarningTxt","styled","p","Warning","TodoTemplateBlock","div","TodoTemplate","children","initialTodos","todoReducer","state","action","type","concat","todo","map","id","done","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","CheckCricle","props","css","Text","Remove","TodoItemBlock","TodoItem","text","onToggle","onClick","memo","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cadd2333.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst TITLE = 'REACT TODO LIST'\r\n\r\nclass Header extends React.PureComponent {\r\n  render () {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>{ TITLE }</title>\r\n        </Helmet>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WarningTxt = styled.p `\r\n    margin:10px auto 10px;\r\n    text-align:center;\r\n    font-size:1.2em;\r\n    font-weight:bold;\r\n    color:crimson;\r\n`;\r\n\r\n\r\nfunction Warning () {\r\n    return (\r\n        <WarningTxt>\r\n            새로고침하면 내용이 사라집니다. 주의하세요\r\n        </WarningTxt>\r\n    );\r\n}\r\n\r\nexport default Warning;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width:95vw;\r\n    max-width:512px;\r\n    height:143vw;\r\n    max-height: 768px;\r\n\r\n    position:relative;\r\n    background:white;\r\n    border-radius:16px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\r\n\r\n    margin:0 auto;\r\n    top:50%;\r\n    transform:rotateY(-50%);\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nfunction TodoTemplate ({ children }) {\r\n    return (\r\n        <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n    );\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    \r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(\r\n                todo => todo.id === action.id ? { ...todo, done: !todo.done} : todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext(); \r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext)\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoPrivier');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoPrivier');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoPrivier');\r\n    }\r\n    return context;\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\n\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding-top:48px;\r\n    padding-left:32px;\r\n    padding-right:32px;\r\n    padding-bottom:24px;\r\n    border-bottom:1px solid #e9ecef;\r\n    h1 {\r\n        margin:0;\r\n        font-size:2.2em;\r\n        color:#343a40;\r\n    }\r\n\r\n    .day {\r\n        margin-top: 4px;\r\n        color:#868e96;\r\n        font-size:1.3em;\r\n    }\r\n\r\n    .tasks-left {\r\n        color:#4263eb;\r\n        font-size:1.125em;\r\n        margin-top:40px;\r\n        font-weight:bold;\r\n    }\r\n`;\r\n\r\nfunction TodoHead ({ children }) {\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n    const dayName = today.toLocaleDateString('ko-KR', {\r\n        weekday: 'long'\r\n    })\r\n    return (\r\n        <TodoHeadBlock>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"day\">{dayName}</div>\r\n            <div className=\"tasks-left\">앞으로 남은 할 일 {undoneTasks.length}개</div>\r\n        </TodoHeadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete} from 'react-icons/md';\r\nimport { useTodoDispatch } from '../TodoContext';\r\n\r\nconst CheckCricle = styled.div `\r\n    width:1.5em;\r\n    height:1.5em;\r\n    border-radius:1em;\r\n    border:1px solid #ced4da;\r\n    font-size:1.5em;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor:pointer;\r\n    ${props => props.done && css`\r\n        border:1px solid #4263eb;\r\n        background-color:#4263eb;\r\n        color:#fff;\r\n    `}\r\n`;\r\nconst Text = styled.div `\r\n    flex:1;\r\n    font-size: 1.3em;\r\n    color: #495057;\r\n    ${props => props.done && css `\r\n        color:#ced4da;\r\n    `}\r\n`;\r\n\r\nconst Remove = styled.div `\r\n    opacity:0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color:#dee2e6;\r\n    font-size:1.5em;\r\n    cursor:pointer;\r\n    &:hover {\r\n        color:#d6336c;\r\n    }\r\n`;\r\n\r\nconst TodoItemBlock = styled.div `\r\n    display:flex;\r\n    align-items:center;\r\n    padding-top:12px;\r\n    padding-bottom:12px;\r\n    &:hover {\r\n        ${Remove} {\r\n            opacity:1;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction TodoItem ({ id, done, text}) {\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({\r\n        type:'TOGGLE',\r\n        id\r\n    });\r\n    const onRemove = () => dispatch({\r\n        type:'REMOVE',\r\n        id\r\n    }); \r\n    return (\r\n        <TodoItemBlock>\r\n            <CheckCricle done={done} onClick={onToggle}>{done && <MdDone />}</CheckCricle>\r\n            <Text done={done} onClick={onToggle}>{text}</Text>\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete />\r\n            </Remove>\r\n        </TodoItemBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex:1;\r\n    padding:20px 32px 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList () {\r\n    const todos = useTodoState();\r\n    return (\r\n    <TodoListBlock>\r\n        {todos.map(\r\n            todo => <TodoItem \r\n                key={todo.id}\r\n                id={todo.id}\r\n                text={todo.text}\r\n                done={todo.done}\r\n            />\r\n        )}\r\n    </TodoListBlock>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoNextId, useTodoDispatch } from '../TodoContext';\r\n\r\nconst CircleButton = styled.button `\r\n    background:#4263eb;\r\n    &:hover {\r\n        background:#91a7ff;\r\n    }\r\n    &:active {\r\n        background:#364fc7;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width:80px;\r\n    height:80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    position:absolute;\r\n    left:50%;\r\n    bottom:0px;\r\n    transform:translate(-50%, 50%);\r\n\r\n    font-size:60px;\r\n    color:white;\r\n    border-radius:50%;\r\n\r\n    border:none;\r\n    outline:none;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props => props.open && css `\r\n        background:$ff6b6b;\r\n        &:hover {\r\n            background:#ff8787;\r\n        }\r\n        &:active {\r\n            background:fa5252\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div `\r\n        width:100%;\r\n        bottom:0;\r\n        left:0;\r\n        position:absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form `\r\n        background-color:#f8f9fa;\r\n        padding:32px;\r\n        padding-bottom:72px;\r\n        border-bottom-left-radius:16px;\r\n        border-bottom-right-radius:16px;\r\n        border-top:1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input `\r\n    padding:12px;\r\n    border-radius:4px;\r\n    border:1px solid #dee2e6;\r\n    width:100%;\r\n    outline:none;\r\n    font-size:18px;\r\n    box-sizing:border-box;\r\n    height:0;\r\n`;\r\n\r\nfunction TodoCreate () {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    \r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = (e) => setValue(e.target.value);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false,\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen('false');\r\n        nextId.current += 1;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <InsertFormPositioner>\r\n                    <InsertForm onSubmit={onSubmit}>\r\n                        <Input\r\n                            placeholder=\"할 일을 입력 후, Enter를 누르세요\"\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            value={value}\r\n                        />\r\n                    </InsertForm>\r\n                </InsertFormPositioner>\r\n            )}\r\n            <CircleButton onClick={onToggle} open={open}>\r\n                <MdAdd />\r\n            </CircleButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoCreate);","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Header from './components/Header';\nimport Warning from './components/Warning';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './TodoContext'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background:#e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <Header />\n      <GlobalStyle />\n      <Warning />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}